#
# scale the third param value to time units of the second param
# modified by means of the first param
#
scale_to_time ()
{
  # lower bound for values
  local lb=$1
  local tsd=$2
  # inplace in/out
  local value=''

  # measurement scale selection
  if [ "$tsd" != '?' ]
  then
    local tmp=$((tsd*${lb}/60))
    if [ $tmp -eq 0 ]
    then
      value="1 a sec"
    else
      tsd=$((tsd/60))
      tmp=$((tsd*${lb}/60))
      if [ $tmp -eq 0 ]
      then
        value="60 a min"
      else
        tsd=$((tsd/60))
        tmp=$((tsd*${lb}/24))
        if [ $tmp -eq 0 ]
        then
          value="3600 an hr"
        else
          tsd=$((tsd/24))
          tmp=$((tsd*${lb}/7))
          if [ $tmp -eq 0 ]
          then
            value="86400 a day"
          else
            tmp=$((tsd*${lb}/31))
            if [ $tmp -eq 0 ]
            then
              value="604800 a week"
            else
              tmp=$((tsd*${lb}/366))
              if [ $tmp -eq 0 ]
              then
                value="2678400 a month"
              else
                value="31536000 a year"
              fi
            fi
          fi
        fi
      fi
    fi
  fi
  echo $value
}

#
# convert the second param given in seconds to shorter time units
# with respect to modification defined by the first param
#
scale_time ()
{
  # lower bound for values
  local lb=$1
  # inplace in/out
  local tsd=$2

  # measurement scale selection
  if [ "$tsd" != '?' ]
  then
    local tmp=$((tsd/60$lb))
    if [ $tmp -eq 0 ]
    then
      tsd="${tsd} sec"
    else
      tsd=$((tsd/60))
      tmp=$((tsd/60$lb))
      if [ $tmp -eq 0 ]
      then
        tsd="$tsd min"
      else
        tsd=$((tsd/60))
        tmp=$((tsd/24$lb))
        if [ $tmp -eq 0 ]
        then
          tsd="$tsd hr(s)"
        else
          tsd=$((tsd/24))
          tmp=$((tsd/7$lb))
          if [ $tmp -eq 0 ]
          then
            tsd="$tsd day(s)"
          else
            tmp=$((tsd/31$lb))
            if [ $tmp -eq 0 ]
            then
              tsd="$((tsd/7)) week(s)"
            else
              tmp=$((tsd/366$lb))
              if [ $tmp -eq 0 ]
              then
                tsd="$((tsd/31)) month(s)"
              else
                tsd="$((tsd/365)) year(s)"
              fi
            fi
          fi
        fi
      fi
    fi
  fi

  echo $tsd
}

format_diff ()
{
  local res=''
  local in=$1
  local tmul=$2
  local ts_diff=$3
  local half_ts_diff=$4

  if [ "$1" != '?' ]
  then
    res=$(((in*$tmul+${half_ts_diff})/${ts_diff}))

    if [ $1 -ge 0 ]
    then
      res="+${res}"
    fi
  fi

  echo $res
}

handle_a_table ()
{
  local count=$1
  local str=$2

  if no_sql_error "$str"
  then
    str=( $str )
    local lang=${str[0]}
    local art=${str[1]}
    local dsmbg=${str[2]}
    local ambg=${str[3]}
    local drdi=${str[4]}
    local core=${str[5]}
    local iso=${str[6]}
    local cl=${str[7]}
    local isor=${str[8]}
    local isocr=${str[9]}
    local chr=${str[10]}
    local de=${str[11]}
    local nc=${str[12]}
    local cr=${str[13]}
    local ncc=${str[14]}
    local tmst=${str[15]}
    local art_diff=${str[16]}
    local iso_diff=${str[17]}
    local iso_cr_diff=${str[18]}
    local dsmbg_diff=${str[19]}
    local cl_diff=${str[20]}
    local chr_diff=${str[21]}
    local de_diff=${str[22]}
    local nc_diff=${str[23]}
    local cr_diff=${str[24]}
    local ncc_diff=${str[25]}
    local drdi_diff=${str[26]}
    local ts_diff=${str[27]}
    local lang_name=${str[28]}

    local art_diff_txt=''

    tmst=${tmst//_/ }

    lang_name=${lang_name//_/ }
    lang_name=${lang_name//\"/\'}

    local bld=''
    local bldc=''
    if [ "$chr" = '0' ] || [ "$chr" = '?' ]
    then
      chr='?'
    else
      bld='<b>'
      bldc='</b>'
    fi

    local tunits=$( scale_to_time 2 $ts_diff )
    tunits=( $tunits )
    local tmul=${tunits[0]}
    local half_ts_diff=0
    if [ "$ts_diff" != '?' ]
    then
      half_ts_diff=$((ts_diff/2))
    fi
    local tmeas="${tunits[1]} ${tunits[2]}"

    isor_diff=$( echo "scale=4; $isor-100*($iso-(${iso_diff}))/($art-(${art_diff}))" | bc )
    if [ "${isor_diff:0:1}" = '.' ]
    then
      isor_diff="+0${isor_diff}"
    else
      if [ "${isor_diff:0:2}" = '-.' ]
      then
        isor_diff="-0.${isor_diff:2}"
      else
        if [ "${isor_diff:0:1}" != '-' ]
        then
          isor_diff="+${isor_diff}"
        fi
      fi
    fi

    ambg_diff=$( echo "scale=4; $ambg-100*($dsmbg-(${dsmbg_diff}))/($dsmbg-(${dsmbg_diff})+$art-(${art_diff}))" | bc )
    if [ "${ambg_diff:0:1}" = '.' ]
    then
      ambg_diff="+0${ambg_diff}"
    else
      if [ "${ambg_diff:0:2}" = '-.' ]
      then
        ambg_diff="-0.${ambg_diff:2}"
      else
        if [ "${ambg_diff:0:1}" != '-' ]
        then
          ambg_diff="+${ambg_diff}"
        fi
      fi
    fi

    if [ "$art_diff" != '?' ]
    then
      art_diff_txt=$(((art_diff*$tmul+${half_ts_diff})/$ts_diff))

      if [ $art_diff -ge 0 ]
      then
        art_diff="+${art_diff}"
        art_diff_txt="+${art_diff_txt}"
      fi
    fi

    if [ "$cl_diff" != '?' ]
    then
      if [ $cl_diff -ge 0 ]
      then
        cl_diff="+${cl_diff}"
      fi
    fi

    if [ "${drdi_diff:0:1}" != '-' ]
    then
      drdi_diff="+${drdi_diff}"
    fi

    echo "<tr>"

    echo "<td>$bld<a href=\"http://${lang}.wikipedia.org\" target=\"_blank\" title=\"${lang}.wikipedia.org\">$count</a>$bldc</td>"

    if [ "$tmst" = 'never processed yet' ]
    then
      echo "<td><span title=\"${lang_name}\">$bld$lang$bldc</span></td>"
    else
      echo "<td>$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=zns\" title=\"${lang_name}\">$lang</a>$bldc</td>"
    fi

    if [ "$dsmbg" = '?' ]
    then
      echo "<td><center>$bld$art$bldc</center></td>"
    else
      echo "<td><span title=\"${art_diff_txt} $tmeas\">$bld$art$bldc</span></td>"
      echo "<td><span title=\"$( format_diff $dsmbg_diff $tmul ${ts_diff} ${half_ts_diff} ) $tmeas\">$bld$dsmbg$bldc</span></td>"
    fi

    if [ "$tmst" = 'never processed yet' ]
    then
      echo "<td>$bld$ambg$bldc</td>"
      echo "<td>$bld$drdi$bldc</td>"
    else
      echo "<td><span title=\"${ambg_diff}\">$bld$ambg$bldc</span></td>"
      echo "<td>$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=disambig\" title=\"${drdi_diff}\">$drdi</a>$bldc</td>"
    fi

    if [ "$iso" = '?' ]
    then
      echo "<td><b>$core</b></td>"
    else
      local core_diff=$(( (${art_diff}) - (${iso_diff}) ))
      local core_diff_txt=$(((core_diff*$tmul+${half_ts_diff})/${ts_diff}))

      if [ $core_diff -ge 0 ]
      then
        core_diff_txt="+${core_diff_txt}"
      fi
      echo "<td><span title=\"${core_diff_txt} $tmeas\"><b>$core</b></span></td>"
    fi
    echo "<td><span title=\"$( format_diff $iso_diff $tmul ${ts_diff} ${half_ts_diff} ) $tmeas\">$bld$iso$bldc</span></td>"

    if [ "$cl" = '0' ]
    then
      echo "<td><span title=\"${art_diff}\">${bld}$art${bldc}</span></td>"
    else
      echo "<td><span title=\"${cl_diff}\">$bld$cl$bldc</span></td>"
    fi

    if [ "$iso" = '?' ]
    then
      echo "<td>$bld$isor$bldc</td>"
    else
      echo "<td><span title=\"${isor_diff}\">$bld$isor$bldc</span></td>"
    fi

    if [ "$tmst" = 'never processed yet' ]
    then
      echo "<td>$bld$isocr$bldc</td>"
    else
      if [ "$iso_cr_diff" = '?' ]
      then
        echo "<td>$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=creator\">$isocr</a>$bldc</td>"
      else
        if [ $iso_cr_diff -ge 0 ]
        then
          iso_cr_diff="+${iso_cr_diff}"
        fi
        echo "<td><span title=\"${iso_cr_diff}\">$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=creator\">$isocr</a>$bldc</span></td>"
      fi
    fi

    if [ "$chr" = '?' ]
    then
      if [ "$tmst" = 'never processed yet' ]
      then
        echo "<td><span title=\"${chr_diff}\">$bld$chr$bldc</span></td>"
      else
        echo "<td>$bld<a href=\"http://ru.wikipedia.org/wiki/Википедия:ConnectivityProjectInternationalization/ArticlesNotFormingValidLinks\">$chr</a>$bldc</td>"
      fi
    else
      if [ $chr_diff -ge 0 ]
      then
        chr_diff="+${chr_diff}"
      fi
      echo "<td><span title=\"${chr_diff}\">$bld$chr$bldc</span></td>"
    fi

    if [ "$de" = '?' ]
    then
      echo "<td>$bld$de$bldc</td>"
    else
      if [ $de_diff -ge 0 ]
      then
        de_diff="+${de_diff}"
      fi
      echo "<td><span title=\"${de_diff}\">$bld$de$bldc</span></td>"
    fi

    if [ "$nc" = '?' ]
    then
      echo "<td>$bld$nc$bldc</td>"
    else
      if [ $nc_diff -ge 0 ]
      then
        nc_diff="+${nc_diff}"
      fi
      echo "<td><span title=\"${nc_diff}\">$bld$nc$bldc</span></td>"
    fi

    if [ "$cr" = '?' ]
    then
      echo "<td>$bld$cr$bldc</td>"
    else
      if [ "$cr_diff" = '?' ]
      then
        echo "<td>$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=categoryspruce\">$cr</a>$bldc</td>"
      else
        if [ $cr_diff -ge 0 ]
        then
          cr_diff="+${cr_diff}"
        fi
        echo "<td><span title=\"${cr_diff}\">$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=categoryspruce\">$cr</a>$bldc</span></td>"
      fi
    fi

    if [ "$ncc" = '?' ]
    then
      echo "<td>$bld$ncc$bldc</td>"
    else
      if [ "$ncc_diff" = '?' ]
      then
        echo "<td>$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=categoryspruce&amp;networkpath=_1\">$ncc</a>$bldc</td>"
      else
        if [ $ncc_diff -ge 0 ]
        then
          ncc_diff="+${ncc_diff}"
        fi
        echo "<td><span title=\"${ncc_diff}\">$bld<a href=\"./go.sh?$stdurl&amp;language=$lang&amp;listby=categoryspruce&amp;networkpath=_1\">$ncc</a>$bldc</span></td>"
      fi
    fi

    echo "<td><span title=\"+$( scale_time '/5' $ts_diff )\">$bld$tmst$bldc</span></td>"

    echo "</tr>"
  else
    echo $str
  fi
}

table_opens ()
{
  local dsmbg=$1

  echo "<table class=\"sortable infotable\">"
  echo "<tr><th>&#8470;</th>"
  echo "<th>$lang_text</th>"
  if [ "$dsmbg" = '?' ]
  then
    echo "<th>$article_and_disambig_text</th>"
  else
    echo "<th>$article_text</th>"
    echo "<th>$disambig_text</th>"
  fi
  echo "<th>$ambig_text</th>"
  echo "<th>$drdi_text</th>"
  echo "<th><b class=\"data\">$main_text</b></th>"
  echo "<th>$iso_text</th>"
  echo "<th>$cl_text</th>"
  echo "<th>$iso_rat_text</th>"
  echo "<th>$iso_cr_text</th>"
  echo "<th>$chrono_text</th>"
  echo "<th>$deadend_text</th>"
  echo "<th>$nocat_text</th>"
  echo "<th>$catring_text</th>"
  echo "<th>$nocatcat_text</th>"
  echo "<th>$time_text</th>"
  echo "</tr>"
}

table_closes ()
{
  echo "</table>"
}

echo "<center>"

table_opens

{
  echo "SELECT __ls.lang,
               ls1.article_count as _ac,
               ls1.disambig_count,
               ls1.disambig_count*100/(ls1.disambig_count+ls1.article_count),
               ls1.drdi,
               ls1.article_count-ls1.isolated_count as _main,
               ls1.isolated_count,
               ls1.cluster_limit,
               ls1.isolated_count*100/ls1.article_count,
               ls1.creator_count,
               ls1.chrono_count,
               ls1.deadend_count,
               ls1.nocat_count,
               ls1.catring_count,
               ls1.nocatcat_count,
               REPLACE(_ts,' ','_'),
               CAST(ls1.article_count-ls2.article_count AS SIGNED),
               CAST(ls1.isolated_count-ls2.isolated_count AS SIGNED),
               CAST(ls1.creator_count-ls2.creator_count AS SIGNED),
               CAST(ls1.disambig_count-ls2.disambig_count AS SIGNED),
               CAST(ls1.cluster_limit-ls2.cluster_limit AS SIGNED),
               CAST(ls1.chrono_count-ls2.chrono_count AS SIGNED),
               CAST(ls1.deadend_count-ls2.deadend_count AS SIGNED),
               CAST(ls1.nocat_count-ls2.nocat_count AS SIGNED),
               CAST(ls1.catring_count-ls2.catring_count AS SIGNED),
               CAST(ls1.nocatcat_count-ls2.nocatcat_count AS SIGNED),
               ls1.drdi-ls2.drdi,
               TIME_TO_SEC(TIMEDIFF(_ts,__ts)),
               CONCAT(REPLACE(native_name,' ','_'),'_/_',REPLACE(english_name,' ','_'))
               FROM (
                      SELECT ls.lang AS lang,
                             MAX(ls.ts) AS __ts,
                             _ts
                             FROM language_stats ls,
                                  (
                                    SELECT lang,
                                           MAX(ts) AS _ts
                                           FROM language_stats
                                           GROUP BY lang
                                  ) as _ls
                             WHERE ls.lang=_ls.lang AND
                                   ls.ts<_ls._ts
                             GROUP BY ls.lang
                    ) __ls
                    INNER JOIN language_stats ls1
                               ON ls1.lang=__ls.lang AND
                                  ls1.ts=__ls._ts AND
                                  ls1.disambig_recognition!=0
                    INNER JOIN language_stats ls2
                               ON ls2.lang=__ls.lang AND
                                  ls2.ts=__ls.__ts
                    INNER JOIN toolserver.language
                               ON __ls.lang=LOWER(language.lang)
               ORDER BY _main DESC,
                        _ac DESC;"

  echo "SELECT 'change';"

  echo "SELECT ls.lang,
               size,
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               catring_count,
               nocatcat_count,
               REPLACE(ts,' ','_'),
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               '?',
               CONCAT(REPLACE(native_name,' ','_'),'_/_',REPLACE(english_name,' ','_'))
               FROM language_stats ls
                    INNER JOIN (
                                 SELECT lang AS _lang,
                                        MAX(ts) AS _ts
                                        FROM language_stats
                                        GROUP BY lang
                               ) _ls
                               ON ls.lang = _ls._lang AND
                                  ls.ts = _ls._ts
                    INNER JOIN toolserver.language
                               ON ls.lang=LOWER(language.lang)
                    INNER JOIN (
                                  SELECT domain,
                                         size
                                         FROM toolserver.wiki
                                         WHERE is_closed=0 and
                                               family='wikipedia'
                               ) tsw
                               ON domain=CONCAT(ls.lang,'.wikipedia.org')
               WHERE disambig_recognition=0
               ORDER BY size DESC;"

} | $( sql ${dbserver} u_${usr}_golem_p ) 2>&1 | { 
                  count=0
                  while read -r line
                  do 
                    if [ "$line" = 'change' ]
                    then
                      table_closes

                      table_opens '?'
                    else
                      line=${line//\"/&quot;}
                      handle_a_table $((count+1)) "$line"
                      count=$((count+1))
                    fi
                  done
                 }

table_closes

echo '<script type="text/javascript" src="../sortable.js"></script>'

echo "</center>"
