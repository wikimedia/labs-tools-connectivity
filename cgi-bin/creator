handle_userlist ()
{
  local id=$1
  local line=$2

  if no_sql_error "$line"
  then
    line=( $line )
    local utxt=${line[0]}
    local uid=${line[1]}
    local amnt=${line[2]}
    utxt=${utxt//_/ }
    utxt=${utxt#\"}
    utxt=${utxt%\"}
    if [ "$utxt" = '' ]
    then
      utxt='&lt;an empty name user&gt;'
    fi

    echo "<tr><td class=\"numerator\">${id}.</td><td class=\"listelem\"><a href='./go.sh?$stdurl&amp;listby=creator&amp;user=$utxt&amp;registered=$uid'>$utxt</a>&rlm;</td><td class=\"sortkey\">$amnt</td></tr>"
  fi
}

search_form ()
{
  local de=$1

  echo $example $1
  echo "<form action=\"./go.sh\" method=\"get\">"
  echo "<fieldset title=\"hidden\">"
  echo "<input type=\"hidden\" name=\"interface\" value=\"$interface\" />"
  echo "<input type=\"hidden\" name=\"language\" value=\"$language\" />"
  echo "<input type=\"hidden\" name=\"listby\" value=\"$listby\" />"
  echo "</fieldset>"
  echo "<p class=\"lookat\">${unamereq}: <input name=\"user\" type=\"text\" /> $activateform</p>"
  echo "</form>"
}

UPPERFIRST=`echo "$user" | cut -c 1  |tr '[a-z]' '[A-Z]'`
user=$( echo "$user" | sed 's/./'$UPPERFIRST'/'1)

if [ "$user" != '' ]
then
  if [ "$user" = '<an empty name user>' ]
  then
    user=''
    user_url='&&;lt;an empty name user&&;gt;'
    user_sql=''
  fi
  usersql=${user//\"/\"\'\"\'\"}

  search_form "$user"

  echo -ne "<p>$list1expl "
  if [ "$registered" = '0' ]
  then
    echo "<a href='http://$language.wikipedia.org/wiki/Special:Contributions/$user_url' target=\"_blank\">$user</a>"
  else
    echo "<a href=\"http://$language.wikipedia.org/w/index.php?title=User:${user_url}\" target=\"_blank\">$user</a>"
  fi
  echo "</p>"

  echo "<table class=\"sortable infotable\">"
  echo "<tr><th>&#8470;</th><th>$article_title_tr</th><th>$iso_type_tr</th></tr>"
  {
    echo SELECT cat,                               \
                title                              \
                FROM creators0,                    \
                     ruwiki0                       \
                WHERE user_text=\"${usersql}\" and \
                      iid=id                       \
                ORDER BY title ASC\;
  } | $( sql ${dbserver} u_${usr}_golem_s${dbserver}_${language_sql} ) 2>&1 | { 
                    count=0
                    while read -r line
                      do handle_isolates_as_table $((count+1)) "$line"
                      count=$((count+1))
                    done
                  }
  echo "</table>"
  echo '<script type="text/javascript" src="../sortable.js"></script>'
else
  if [ "$registered" = '0' ]
  then
    search_form "$default_example"

    echo "<p>$anonymous_s</p>"

    echo "<table class=\"sortable infotable\">"
    echo "<tr><th>&#8470;</th><th>$article_title_tr</th><th>$iso_type_tr</th></tr>"
    {
      echo SELECT cat,             \
                  title            \
                  FROM creators0,  \
                       ruwiki0     \
                  WHERE user=0 and \
                        iid=id     \
                  ORDER BY title ASC\;
    } | $( sql ${dbserver} u_${usr}_golem_s${dbserver}_${language_sql} ) 2>&1 | { 
                      count=0
                      while read -r line
                        do handle_isolates_as_table $((count+1)) "$line"
                        count=$((count+1))
                      done
                    }
    echo "</table>"
    echo '<script type="text/javascript" src="../sortable.js"></script>'
  else
    if [ "$registered" = '' ]
    then
      {
        echo SELECT CONCAT\( \'\"\', REPLACE\(user_text,\' \',\'\_\'\), \'\"\' \), \
                    sign\(user\),                      \
                    count\(\*\) as cnt                 \
                    FROM creators0                     \
                    GROUP BY user_text                 \
                    ORDER BY cnt DESC                  \
                    LIMIT $((shift)),100\;
      } | $( sql ${dbserver} u_${usr}_golem_s${dbserver}_${language_sql} ) 2>&1 | { 
                        count=0
                        while read -r line
                        do 
                          data[$count]=$( handle_userlist $((shift+count+1)) "$line" )
                          count=$((count+1))
                        done

                        line=${data[$(($RANDOM*100/32768))]}
                        line=${line%\<\/a*\>}

                        search_form "${line#\<*\'\>}"

                        echo "<p>$whatisit</p>"

                        echo "<h4>$list2name</h4>"

                        shifter
                        echo "<table class=\"listlike\">"

                        echo ${data[@]}

                        echo "</table>"
                        shifter
                      }
#
#    this could be for the list of all isolated articles
#    created by registered users
#
#    else
    fi
  fi
fi
